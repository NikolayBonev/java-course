import java.awt.Component;
import java.awt.EventQueue;
import java.awt.Font;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;
import java.awt.event.ActionEvent;
import javax.swing.JLabel;

public class LotaryGame {

	private JFrame frame;
	private JTable table;
	private String[] luckyNumber;
	ArrayList<String> list;
	ArrayList<User> users = new ArrayList<User>();
	ArrayList<User> winners = null;
	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					LotaryGame window = new LotaryGame();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public LotaryGame() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.setBounds(200, 0, 800, 734);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);

		JButton btnAdd = new JButton("Add ");
		btnAdd.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				Add cr = new Add();
				cr.setModal(true);
				cr.setVisible(true);
				User user = cr.getUser();
				if (user != null) {
					DefaultTableModel model = (DefaultTableModel) table.getModel();
					model.addRow(new Object[] { user.getID(), user.getUserNumbersString() });
				}
				users.add(user);
			}
		});
		btnAdd.setFont(new Font("Tahoma", Font.PLAIN, 15));
		btnAdd.setBounds(10, 646, 157, 38);
		frame.getContentPane().add(btnAdd);

		JButton btnShowLuckyNumbers = new JButton("Show Lucky Numbers");
		btnShowLuckyNumbers.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String luckyNumbers = "";
				Random rand = new Random();
				
				luckyNumber = new String[5];
				for (int number=0; number<5; number++) {
					Integer randomNumber = rand.nextInt(30) + 1;
					luckyNumber[number] = randomNumber.toString();
					luckyNumbers += luckyNumber[number] + ", ";
				}
				int index = luckyNumbers.lastIndexOf(",");
				luckyNumbers = luckyNumbers.substring(0, index);
				JOptionPane.showMessageDialog(null, "The winning numbers are: "+luckyNumbers);
				
				
				//For export
				try {
				FileWriter fileWriter = new FileWriter("LuckyNumbers.txt");
				BufferedWriter bufferedWriter = new BufferedWriter(fileWriter);
				bufferedWriter.write(luckyNumbers);
				
				bufferedWriter.close();
				fileWriter.close();
				} catch (Exception ex) {
					JOptionPane.showMessageDialog(null, "Error while saving file!");
				}
			}
		});
		btnShowLuckyNumbers.setFont(new Font("Tahoma", Font.PLAIN, 15));
		btnShowLuckyNumbers.setBounds(201, 646, 187, 38);
		frame.getContentPane().add(btnShowLuckyNumbers);

		JButton btnShowWinners = new JButton("Show Winners");
		btnShowWinners.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				Winners win=new Winners(luckyNumber, users);
				win.setVisible(true);
				win.setModal(true);

				winners = win.getWinners();
				
//				String[] luckNumbers = luckyNumbers.split(",");
//				
//				ArrayList<Winner> winners = new ArrayList<Winner>();
//			
//				Winner winner= null;
//				for(int i = 0 ; i < list.size() ; i++){
//					String ID = String.valueOf(list1.get(i).getID());
//					
//					String[] userNumbers= list1.get(i).getUserNumbers();
//					
//					int hitNumbers = 0;
//					for(int j = 0 ; j < userNumbers.length ; j++){
//						for(int k = 0 ; k < luckNumbers.length ; k++){
//							if(userNumbers[j].equals(luckNumbers[k])){
//								hitNumbers++;
//							}
//						}
//					}
//					
//					if(hitNumbers > 2){
//						winner = new Winner(ID, list1.get(i).getUserNumbersString());
//						winners.add(winner);
//					}
//					
//				}
//				try {
//					String path = "";
//					BufferedWriter writer;
//					writer = new BufferedWriter(new FileWriter(path, true));
//					String[] luckyNumbers = null;
//					ArrayList<User> users = null;
//
//					for (int i = 0; i < users.size(); i++) {
//						String ID = String.valueOf(users.get(i).getID());
//
//						String[] userNumbers = users.get(i).getUserNumbers();
//
//						int hitNumbers = 0;
//						for (int j = 0; j < userNumbers.length; j++) {
//							for (int k = 0; k < luckyNumbers.length; k++) {
//								if (userNumbers[j].equals(luckyNumbers[k])) {
//									hitNumbers++;
//								}
//							}
//						}
//
//						if (hitNumbers > 2) {
//							writer.write(ID);
//							writer.write(": ");
//
//							writer.write(hitNumbers + "numbers");
//							writer.newLine();
//						}
//					}
//					writer.close();
//				} catch (Exception ex) {
//					JOptionPane.showMessageDialog(null, "Error while saving file!");
//				}
//				
//				String path1 = null;
//				try {
//
//					BufferedReader reader = new BufferedReader(new FileReader(path1));
//
//					while (reader.ready()) {
//							String line = reader.readLine();
//							String[] user = line.split("[:\\s]");
//							
//							DefaultTableModel model = (DefaultTableModel) table.getModel();
//							model.addRow(new Object[] { user[0], user[1] });
//					}
//					reader.close();
//					
//					
//				} catch (IOException exx) {
//					System.out.println("Error: ");
//					System.out.println(exx.getMessage());
//					System.exit(0);
//				}
			}
		});
		btnShowWinners.setFont(new Font("Tahoma", Font.PLAIN, 15));
		btnShowWinners.setBounds(412, 646, 157, 38);
		frame.getContentPane().add(btnShowWinners);

		JButton btnExport = new JButton("Export");
		btnExport.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				JFileChooser chooser = new JFileChooser();
			    chooser.setCurrentDirectory(new java.io.File("."));
			    chooser.setDialogTitle("Save folder");
			    chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
			    chooser.setAcceptAllFileFilterUsed(false);

			    if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
			    	
			    	String path = chooser.getSelectedFile() + "\\";
			    	if(path == null || path == ""){
			    		return;
			    	}
			    	
			    	String usersPath = path + "users.txt";
			    	String luckyNumbersPath = path + "luckyNumbers.txt";
			    	String winnersPath = path + "winners.txt";
			    	
			    	FileWriter fileStream;
					try {
						fileStream = new FileWriter(usersPath);
						BufferedWriter writer = new BufferedWriter(fileStream);

						list = new ArrayList<String>();

						int rowCount = table.getRowCount();

						for (int i = 0; i < rowCount; i++) {
							String line = String.format("%s : %s", table.getValueAt(i, 0), table.getValueAt(i, 1));
							list.add(line);
						}
						
						for (String line : list) {
							writer.append(line);
							writer.newLine();
						}
	
						writer.close();
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}
					
			      System.out.println("getCurrentDirectory(): " + chooser.getCurrentDirectory());
			      System.out.println("getSelectedFile() : " + chooser.getSelectedFile());
			    } else {
			      System.out.println("No Selection ");
			    }

//				try {
//
//					JFileChooser fileChooser = new JFileChooser();
//					fileChooser.setFileFilter(new FileNameExtensionFilter("txt", "txt"));
//					fileChooser.showDialog(null, "Choose...");
//					File file = fileChooser.getSelectedFile();
//					if (file == null) {
//						return;
//					}
//					String path = file.getPath();
//					if (path == null) {
//						return;
//					}
//					path = path.endsWith(".txt") ? path : path + ".txt";
//
//					FileWriter fileStream = new FileWriter(path);
//					BufferedWriter writer = new BufferedWriter(fileStream);
//
//					list = new ArrayList<String>();
//
//					int rowCount = table.getRowCount();
//
//					for (int i = 0; i < rowCount; i++) {
//						String line = String.format("%s : %s", table.getValueAt(i, 0), table.getValueAt(i, 1));
//						list.add(line);
//					}
//
//					for (String line : list) {
//						writer.append(line);
//						writer.newLine();
//					}
//
//					writer.close();
//				} catch (Exception ex) {
//					JOptionPane.showMessageDialog(null, "Error while saving file!");
//				}
//				JOptionPane.showMessageDialog(null, "Successfully saved in file!");
			}
		});
		btnExport.setFont(new Font("Tahoma", Font.PLAIN, 15));
		btnExport.setBounds(593, 646, 150, 38);
		frame.getContentPane().add(btnExport);

		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(10, 370, 764, 265);
		frame.getContentPane().add(scrollPane);

		table = new JTable();
		Object[][] rowData = new Object[0][2];
		Object[] columns = { "ID", "Numbers" };
		table = new JTable(new DefaultTableModel(rowData, columns));
		table.setFont(new Font("Tahoma", Font.PLAIN, 14));
		table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
		scrollPane.setViewportView(table);
		
		JLabel lblImage = new JLabel("");
		lblImage.setIgnoreRepaint(true);
		lblImage.setAlignmentY(Component.TOP_ALIGNMENT);
		ImageIcon img = new ImageIcon(this.getClass().getResource("/lot.jpg"));
		lblImage.setIcon(img);
		lblImage.setBounds(118, 21, 573, 299);
		frame.getContentPane().add(lblImage);
		// scrollPane.setColumnHeaderView(table);

	}
}
