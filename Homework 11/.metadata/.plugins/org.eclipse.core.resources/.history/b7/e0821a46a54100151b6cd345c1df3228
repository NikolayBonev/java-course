import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class MathChecker {

	public static void main(String[] args) {
		Scanner inputs = new Scanner(System.in, "UTF-8");
		
		System.out.print("Enter mathematic eqesion: ");
		String mathText = inputs.nextLine();
		
		Queue<String> numbers = isNumber(mathText);
		Stack<Character> plusMinus = isPlusMinus(mathText);

		while(!plusMinus.isEmpty()){
			int num1, num2;
			if(numbers.size() != 1){
				num1 = Integer.parseInt(numbers.poll());
				num2 = Integer.parseInt(numbers.poll());
			}
			
			if(numbers.size() == plusMinus.size()){
				if(plusMinus.pop() == '-'){
					num1*=-1;
				}
				if(plusMinus.pop() == '-'){
					num2*=-1;
				}
				
				int numRes = num1 + num2;
				
				if(numRes>=0){
					reorganiseStack(plusMinus, '+');
				}else{
					reorganiseStack(plusMinus, '-');
				}
				
				numRes = Math.abs(numRes);
				numbers.offer("" + numRes);
				
			}else{
				if(plusMinus.pop() == '+'){
					int num = num1 + num2;
					System.out.println(num);
					reorganiseStack(plusMinus, '+');
					numbers.offer("" + num);
				}else {
					int numRes = num1 - num2;
					System.out.println(numRes);
					if(numRes>=0){
						reorganiseStack(plusMinus, '+');
					}else{
						reorganiseStack(plusMinus, '-');
					}
					numRes = Math.abs(numRes);
					numbers.offer("" + numRes);
				}
				
			}
			
			
		}
		
		System.out.println(numbers.poll());
		
		System.out.println("Done!");
	}
	
	public static Stack<Character> reorganiseStack(Stack<Character> sym, char plusMin){
		Stack<Character> buffer = new Stack<Character>();
		
		while(!sym.isEmpty()){
			buffer.push(sym.pop());
		}
		
		sym.push(plusMin);
		
		while(!buffer.isEmpty()){
			sym.push(buffer.pop());
		}
		
		return sym;
	}
	
	public static Stack<Character> isPlusMinus(String mathText){
		Stack<Character> plusMinus = new Stack<Character>();
		
		for(int j = mathText.length()-2 ; j >= 0; j-=2){
			if(mathText.charAt(j) == '+' || mathText.charAt(j) == '-'){
//				System.out.println(mathText.charAt(j));
				plusMinus.push(mathText.charAt(j));
			}else{
				System.out.println("Invalid input!");
				break;
			}
		}
		
		return plusMinus;
	}
	
	public static Queue<String> isNumber(String mathText){
		Queue<String> numbers = new LinkedList<String>();
		
		for(int i = 0 ; i < mathText.length() ; i+=2){
			if(Character.isDigit(mathText.charAt(i))){
				String num = "" + mathText.charAt(i);
				numbers.offer(num);
			}else{
				System.out.println("Invalid input!");
				break;
			}
		}
		
		return numbers;
	}

}
